from scannerDFA import TokenKind

# Enum of Non-terminals
class NonTerminals(Enum):
    START = 113
    GOAL = 114
    LITERAL = 115
    TYPE = 116
    PRIMITIVE_TYPE = 117
    NUMERIC_TYPE = 118
    INTEGRAL_TYPE = 119
    FLOATING_POINT_TYPE = 120
    REFERENCE_TYPE = 121
    CLASS_OR_INTERFACE_TYPE = 122
    CLASS_TYPE = 123
    INTERFACE_TYPE = 124
    ARRAY_TYPE = 125
    NAME = 126
    SIMPLE_NAME = 127
    QUALIFIED_NAME = 128
    COMPILATION_UNIT = 129
    IMPORT_DECLARATIONS = 130
    TYPE_DECLARATIONS = 131
    PACKAGE_DECLARATION = 132
    IMPORT_DECLARATION = 133
    SINGLE_TYPE_IMPORT_DECLARATION = 134
    TYPE_IMPORT_ON_DEMAND_DECLARATION = 135
    TYPE_DECLARATION = 136
    MODIFIERS = 137
    MODIFIER = 138
    CLASS_DECLARATION = 139
    SUPER = 140
    INTERFACES = 141
    INTERFACE_TYPE_LIST = 142
    CLASS_BODY = 143
    CLASS_BODY_DECLARATIONS = 144
    CLASS_BODY_DECLARATION = 145
    CLASS_MEMBER_DECLARATION = 146
    FIELD_DECLARATION = 147
    VARIABLE_DECLARATORS = 148
    VARIABLE_DECLARATOR = 149
    VARIABLE_DECLARATOR_ID = 150
    VARIABLE_INITIALIZER = 151
    METHOD_DECLARATION = 152
    METHOD_HEADER = 153
    METHOD_DECLARATOR = 154
    FORMAL_PARAMETER_LIST = 155
    FORMAL_PARAMETER = 156
    THROWS = 157
    CLASS_TYPE_LIST = 158
    METHOD_BODY = 159
    STATIC_INITIALIZER = 160
    CONSTRUCTOR_DECLARATION = 161
    CONSTRUCTOR_DECLARATOR = 162
    CONSTRUCTOR_BODY = 163
    EXPLICIT_CONSTRUCTOR_INVOCATION = 164
    INTERFACE_DECLARATION = 165
    EXTENDS_INTERFACES = 166
    INTERFACE_BODY = 167
    INTERFACE_MEMBER_DECLARATIONS = 168
    INTERFACE_MEMBER_DECLARATION = 169
    CONSTANT_DECLARATION = 170
    ABSTRACT_METHOD_DECLARATION = 171
    ARRAY_INITIALIZER = 172
    VARIABLE_INITIALIZERS = 173
    BLOCK = 174
    BLOCK_STATEMENTS = 175
    BLOCK_STATEMENT = 176
    LOCAL_VARIABLE_DECLARATION_STATEMENT = 177
    LOCAL_VARIABLE_DECLARATION = 178
    STATEMENT = 179
    STATEMENT_NO_SHORT_IF = 180
    STATEMENT_WITHOUT_TRAILING_SUBSTATEMENT = 181
    EMPTY_STATEMENT = 182
    LABELED_STATEMENT = 183
    LABELED_STATEMENT_NO_SHORT_IF = 184
    EXPRESSION_STATEMENT = 185
    STATEMENT_EXPRESSION = 186
    IF_THEN_STATEMENT = 187
    IF_THEN_ELSE_STATEMENT = 188
    IF_THEN_ELSE_STATEMENT_NO_SHORT_IF = 189
    SWITCH_STATEMENT = 190
    SWITCH_BLOCK = 191
    SWITCH_BLOCK_STATEMENT_GROUPS = 192
    SWITCH_BLOCK_STATEMENT_GROUP = 193
    SWITCH_LABELS = 194
    SWITCH_LABEL = 195
    WHILE_STATEMENT = 196
    WHILE_STATEMENT_NO_SHORT_IF = 197
    DO_STATEMENT = 198
    FOR_STATEMENT = 199
    FOR_STATEMENT_NO_SHORT_IF = 200
    FOR_INIT = 201
    FOR_UPDATE = 202
    STATEMENT_EXPRESSION_LIST = 203
    BREAK_STATEMENT = 204
    CONTINUE_STATEMENT = 205
    RETURN_STATEMENT = 206
    THROW_STATEMENT = 207
    SYNCHRONIZED_STATEMENT = 208
    TRY_STATEMENT = 209
    CATCHES = 210
    CATCH_CLAUSE = 211
    FINALLY = 212
    PRIMARY = 213
    PRIMARY_NO_NEW_ARRAY = 214
    CLASS_INSTANCE_CREATION_EXPRESSION = 215
    ARGUMENT_LIST = 216
    ARRAY_CREATION_EXPRESSION = 217
    DIM_EXPRS = 218
    DIM_EXPR = 219
    DIMS = 220
    FIELD_ACCESS = 221
    METHOD_INVOCATION = 222
    ARRAY_ACCESS = 223
    POSTFIX_EXPRESSION = 224
    POST_INCREMENT_EXPRESSION = 225
    POST_DECREMENT_EXPRESSION = 226
    UNARY_EXPRESSION = 227
    PRE_INCREMENT_EXPRESSION = 228
    PRE_DECREMENT_EXPRESSION = 229
    UNARY_EXPRESSION_NOT_PLUS_MINUS = 230
    CAST_EXPRESSION = 231
    MULTIPLICATIVE_EXPRESSION = 232
    ADDITIVE_EXPRESSION = 233
    SHIFT_EXPRESSION = 234
    RELATIONAL_EXPRESSION = 235
    EQUALITY_EXPRESSION = 236
    AND_EXPRESSION = 237
    EXCLUSIVE_OR_EXPRESSION = 238
    INCLUSIVE_OR_EXPRESSION = 239
    CONDITIONAL_AND_EXPRESSION = 240
    CONDITIONAL_OR_EXPRESSION = 241
    CONDITIONAL_EXPRESSION = 242
    ASSIGNMENT_EXPRESSION = 243
    ASSIGNMENT = 244
    LEFT_HAND_SIDE = 245
    ASSIGNMENT_OPERATOR = 246
    EXPRESSION = 247
    CONSTANT_EXPRESSION = 248
    INTEGER_LITERAL = 249

def getProductionRules():
    # In the form of [(LHS :: NonTerminal, RHS :: [Symbol])]
    return [
        (NonTerminals.START, [TokenKind.SPECIAL_PARSE_BEGINNING_OF_INPUT, NonTerminals.GOAL, TokenKind.SPECIAL_PARSE_END_OF_INPUT]),
        (NonTerminals.GOAL, [NonTerminals.COMPILATION_UNIT]),
        (NonTerminals.LITERAL, [NonTerminals.INTEGER_LITERAL]),
        (NonTerminals.LITERAL, [TokenKind.BOOLEAN_LITERAL]),
        (NonTerminals.LITERAL, [TokenKind.CHARACTER_LITERAL]),
        (NonTerminals.LITERAL, [TokenKind.STRING_LITERAL]),
        (NonTerminals.LITERAL, [TokenKind.NULL_LITERAL]),
        (NonTerminals.INTEGER_LITERAL, [TokenKind.DECIMAL_INTEGER_LITERAL]),
        (NonTerminals.TYPE), [NonTerminals.PRIMITIVE_TYPE]),
        (NonTerminals.TYPE), [NonTerminals.REFERENCE_TYPE]),
        (NonTerminals.PRIMITIVE_TYPE, [NonTerminals.NUMERIC_TYPE]),
        (NonTerminals.PRIMITIVE_TYPE, [TokenKind.KEYWORD_BOOLEAN]),
        (NonTerminals.NUMERIC_TYPE, [NonTerminals.INTEGRAL_TYPE]),
        (NonTerminals.INTEGRAL_TYPE, [TokenKind.KEYWORD_BYTE]),
        (NonTerminals.INTEGRAL_TYPE, [TokenKind.KEYWORD_SHORT]),
        (NonTerminals.INTEGRAL_TYPE, [TokenKind.KEYWORD_INT]),
        (NonTerminals.INTEGRAL_TYPE, [TokenKind.KEYWORD_CHAR]),
        (NonTerminals.FLOATING_POINT_TYPE, [TokenKind.KEYWORD_FLOAT]),
        (NonTerminals.FLOATING_POINT_TYPE, [TokenKind.KEYWORD_DOUBLE]),
        (NonTerminals.REFERENCE_TYPE, [NonTerminals.CLASS_OR_INTERFACE_TYPE]),
        (NonTerminals.REFERENCE_TYPE, [NonTerminals.ARRAY_TYPE]),
        (NonTerminals.CLASS_OR_INTERFACE_TYPE, [NonTerminals.NAME]),
        (NonTerminals.CLASS_TYPE, [NonTerminals.CLASS_OR_INTERFACE_TYPE]),
        (NonTerminals.INTERFACE_TYPE, [NonTerminals.CLASS_OR_INTERFACE_TYPE]),
        (NonTerminals.ARRAY_TYPE, [NonTerminals.PRIMITIVE_TYPE, TokenKind.LEFT_BRACKET, TokenKind.RIGHT_BRACKET]),
        (NonTerminals.ARRAY_TYPE, [NonTerminals.NAME, TokenKind.LEFT_BRACKET, TokenKind.RIGHT_BRACKET]),
        (NonTerminals.NAME, [NonTerminals.SIMPLE_NAME]),
        (NonTerminals.NAME, [NonTerminals.QUALIFIED_NAME]),
        (NonTerminals.SIMPLE_NAME, [TokenKind.IDENTIFIER]),
        (NonTerminals.QUALIFIED_NAME, [NonTerminals.NAME, TokenKind.DOT, TokenKind.IDENTIFIER]),
        (NonTerminals.COMPILATION_UNIT, [NonTerminals.PACKAGE_DECLARATION]),
        (NonTerminals.COMPILATION_UNIT, [NonTerminals.IMPORT_DECLARATIONS]),
        (NonTerminals.COMPILATION_UNIT, [NonTerminals.TYPE_DECLARATION]),
        (NonTerminals.COMPILATION_UNIT, [NonTerminals.PACKAGE_DECLARATION, NonTerminals.IMPORT_DECLARATIONS]),
        (NonTerminals.COMPILATION_UNIT, [NonTerminals.PACKAGE_DECLARATION, NonTerminals.TYPE_DECLARATION]),
        (NonTerminals.COMPILATION_UNIT, [NonTerminals.IMPORT_DECLARATIONS, NonTerminals.TYPE_DECLARATION]),
        (NonTerminals.COMPILATION_UNIT, [NonTerminals.PACKAGE_DECLARATION, NonTerminals.IMPORT_DECLARATIONS, NonTerminals.TYPE_DECLARATION])
        (NonTerminals.IMPORT_DECLARATIONS, [NonTerminals.IMPORT_DECLARATION]),
        (NonTerminals.IMPORT_DECLARATIONS, [NonTerminals.IMPORT_DECLARATIONS, NonTerminals.IMPORT_DECLARATION]),
        (NonTerminals.TYPE_DECLARATIONS, [NonTerminals.TYPE_DECLARATION]),
        (NonTerminals.TYPE_DECLARATIONS, [NonTerminals.TYPE_DECLARATIONS, NonTerminals.TYPE_DECLARATION]),
    ]