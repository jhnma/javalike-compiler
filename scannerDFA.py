from enum import Enum

class TokenKind(Enum):
    RIGHT_BRACKET = 1
    LEFT_BRACKET = 2
    SEMICOLON = 3
    RIGHT_PARENTHESIS = 4
    LEFT_PARENTHESIS = 5
    RIGHT_BRACE = 6
    LEFT_BRACE = 7
    OPERATOR = 8
    IDENTIFIER = 9
    DECIMAL_INTEGER_LITERAL = 10
    OCTAL_INTEGER_LITERAL = 11
    LONG_INTEGER_LITERAL = 12
    HEX_INTEGER_LITERAL = 13
    FLOATING_POINT_LITERAL = 14 # is this equiv. to FLOAT_LITERAL?
    STRING_LITERAL = 15
    CHARACTER_LITERAL = 16
    COMMENT = 17
    COMMA = 18
    DOT = 19
    UNICODE_ESCAPE = 20
    NULL_LITERAL = 21
    BOOLEAN_LITERAL = 22
    KEYWORD_IF = 23
    KEYWORD_FOR = 24
    KEYWORD_THIS = 25
    KEYWORD_ABSTRACT = 26
    KEYWORD_DEFAULT = 27
    KEYWORD_PRIVATE = 28
    KEYWORD_BOOLEAN = 29
    KEYWORD_DO = 30
    KEYWORD_IMPLEMENTS = 31
    KEYWORD_PROTECTED = 32
    KEYWORD_THROW = 33
    KEYWORD_THROWS = 34
    KEYWORD_BREAK = 35
    KEYWORD_DOUBLE = 36
    KEYWORD_IMPORT = 37
    KEYWORD_PUBLIC = 38
    KEYWORD_BYTE = 39
    KEYWORD_ELSE = 40
    KEYWORD_INSTANCEOF = 41
    KEYWORD_RETURN = 42
    KEYWORD_TRANSIENT = 43
    KEYWORD_CASE = 44
    KEYWORD_EXTENDS = 45
    KEYWORD_INT = 46
    KEYWORD_SHORT = 47
    KEYWORD_TRY = 48
    KEYWORD_CATCH = 49
    KEYWORD_FINAL = 50
    KEYWORD_INTERFACE = 51
    KEYWORD_STATIC = 52
    KEYWORD_VOID = 53
    KEYWORD_CHAR = 54
    KEYWORD_FINALLY = 55
    KEYWORD_LONG = 56
    KEYWORD_STRICT_FP = 57
    KEYWORD_VOLATILE = 58
    KEYWORD_CLASS = 59
    KEYWORD_FLOAT = 60
    KEYWORD_NATIVE = 61
    KEYWORD_SUPER = 62
    KEYWORD_WHILE = 63
    KEYWORD_CONST = 64
    KEYWORD_NEW = 65
    KEYWORD_SWITCH = 66
    KEYWORD_CONTINUE = 67
    KEYWORD_GOTO = 68
    KEYWORD_PACKAGE = 69
    KEYWORD_SYNCHRONIZED = 70

class DfaNode:
    def __init__(self, name, isAccepting, tokenType = None):
        self.name = name
        self.isAccepting = isAccepting
        self.tokenType = tokenType

    def __repr__(self):
        return "DfaNode <name: \"%s\", isAccepting: %s, tokenType: %s>" % (self.name, ("true" if self.isAccepting else "false"), self.tokenType)
    
    def __eq__(self, otherNode):
        if self.name == otherNode.name and self.isAccepting == otherNode.isAccepting and self.tokenType == otherNode.tokenType:
            return True
        else:
            return False
    
    def __hash__(self):
        return hash((self.name, self.isAccepting, self.tokenType))

class Token:
    def __init__(self, lexeme, tokenType):
        self.lexeme = lexeme
        self.tokenType = tokenType
    
    def __repr__(self):
        return "\"" + self.lexeme + "\""
        # return "Token <lexeme: \"%s\", tokenType: %s>" % (self.lexeme, self.tokenType)
    
    def __eq__(self, otherToken):
        if self.lexeme == otherToken.lexeme and self.tokenType == otherToken.tokenType:
            return True
        else:
            return False
    
    def __hash__(self):
        return hash((self.lexeme, self.tokenType))

def getDfa():
    node_start = DfaNode("start", False)
    node_rbracket = DfaNode("rbracket", True, TokenKind.RIGHT_BRACKET)
    node_lbracket = DfaNode("lbracket", True, TokenKind.LEFT_BRACKET)
    node_semicolon = DfaNode("semicolon", True, TokenKind.SEMICOLON)
    node_rparen = DfaNode("rparen", True, TokenKind.RIGHT_PARENTHESIS)
    node_lparen = DfaNode("lparen", True, TokenKind.LEFT_PARENTHESIS)
    node_lbrace = DfaNode("lbrace", True, TokenKind.LEFT_BRACE)
    node_rbrace = DfaNode("rbrace", True, TokenKind.RIGHT_BRACE)
    node_7 = DfaNode("7", True, TokenKind.OPERATOR)
    node_8 = DfaNode("8", True, TokenKind.OPERATOR)
    node_9 = DfaNode("9", True, TokenKind.OPERATOR)
    node_10 = DfaNode("10", True, TokenKind.OPERATOR)
    node_11 = DfaNode("11", True, TokenKind.OPERATOR)
    node_12 = DfaNode("12", True, TokenKind.OPERATOR)
    node_13 = DfaNode("13", True, TokenKind.OPERATOR)
    node_14 = DfaNode("14", True, TokenKind.OPERATOR)
    node_15 = DfaNode("15", True, TokenKind.OPERATOR)
    node_16 = DfaNode("16", True, TokenKind.OPERATOR)
    node_17 = DfaNode("17", True, TokenKind.OPERATOR)
    node_18 = DfaNode("18", True, TokenKind.OPERATOR)
    node_19 = DfaNode("19", True, TokenKind.OPERATOR)
    node_20 = DfaNode("20", True, TokenKind.OPERATOR)
    node_21 = DfaNode("21", True, TokenKind.OPERATOR)
    node_22 = DfaNode("22", True, TokenKind.OPERATOR)
    node_23 = DfaNode("23", True, TokenKind.OPERATOR)
    node_div = DfaNode("div", True, TokenKind.OPERATOR)
    node_ident1 = DfaNode("ident1", True, TokenKind.IDENTIFIER)
    node_ident2 = DfaNode("ident2", True, TokenKind.IDENTIFIER)
    node_decimal1 = DfaNode("decimal1", True, TokenKind.DECIMAL_INTEGER_LITERAL)
    node_decimal2 = DfaNode("decimal2", True, TokenKind.DECIMAL_INTEGER_LITERAL)
    node_decimal3 = DfaNode("decimal3", True, TokenKind.DECIMAL_INTEGER_LITERAL)
    node_octal1 = DfaNode("octal1", True, TokenKind.OCTAL_INTEGER_LITERAL)
    node_long1 = DfaNode("long1", True, TokenKind.LONG_INTEGER_LITERAL)
    node_hex1 = DfaNode("hex1", False)
    node_hex2 = DfaNode("hex2", True, TokenKind.HEX_INTEGER_LITERAL)
    node_float1 = DfaNode("float1", True, TokenKind.FLOATING_POINT_LITERAL)
    node_float2 = DfaNode("float2", True, TokenKind.FLOATING_POINT_LITERAL)
    node_float3 = DfaNode("float3", True, TokenKind.FLOATING_POINT_LITERAL)
    node_float4 = DfaNode("float4", True, TokenKind.FLOATING_POINT_LITERAL)
    node_float5 = DfaNode("float5", False)
    node_float6 = DfaNode("float6", False)
    node_dot1 = DfaNode("dot1", True, TokenKind.DOT)
    node_string1 = DfaNode("string1", False)
    node_string2 = DfaNode("string2", False)
    node_string4odd = DfaNode("string4odd", False)
    node_string3 = DfaNode("string3", True, TokenKind.STRING_LITERAL)
    node_char1 = DfaNode("char1", False)
    node_char2 = DfaNode("char2", False)
    node_char3 = DfaNode("char3", True, TokenKind.CHARACTER_LITERAL)
    node_char4 = DfaNode("char4", False)
    node_char5 = DfaNode("char5", False)
    node_zeroToThree = DfaNode("zeroToThree", False)
    node_octalEscape2 = DfaNode("octalEscape2", False)
    node_octalEscape3 = DfaNode("octalEscape3", False)
    node_zeroToThreeString = DfaNode("zeroToThreeString", False)
    node_octalEscape2String = DfaNode("octalEscape2String", False)
    node_comment2 = DfaNode("comment2", True, TokenKind.COMMENT)
    node_comment3 = DfaNode("comment3", False)
    node_comment4 = DfaNode("comment4", False)
    node_comment5 = DfaNode("comment5", True, TokenKind.COMMENT)
    node_comma1 = DfaNode("comma1", True, TokenKind.COMMA)
    node_unicode1 = DfaNode("unicode1", False)
    node_unicode2 = DfaNode("unicode2", False)
    node_unicode3 = DfaNode("unicode3", False)
    node_unicode4 = DfaNode("unicode4", False)
    node_unicode5 = DfaNode("unicode5", True, TokenKind.UNICODE_ESCAPE)

    dfa = {
        node_start: {
            "]": node_rbracket,
            "[": node_lbracket,
            ";": node_semicolon,
            ")": node_rparen,
            "(": node_lparen,
            "{": node_lbrace,
            "}": node_rbrace,
            "=": node_7,
            "^": node_7,
            "!": node_7,
            "*": node_7,
            "%": node_7,
            "&": node_9,
            "/": node_div,
            ">": node_10,
            "<": node_11,
            "+": node_19,
            "-": node_21,
            "|": node_17,
            "~": node_23,
            ":": node_23,
            "?": node_23,
            "_": node_ident1,
            "$": node_ident1,
            "a": node_ident1,
            "b": node_ident1,
            "c": node_ident1,
            "d": node_ident1,
            "e": node_ident1,
            "f": node_ident1,
            "g": node_ident1,
            "h": node_ident1,
            "i": node_ident1,
            "j": node_ident1,
            "k": node_ident1,
            "l": node_ident1,
            "m": node_ident1,
            "n": node_ident1,
            "o": node_ident1,
            "p": node_ident1,
            "q": node_ident1,
            "r": node_ident1,
            "s": node_ident1,
            "t": node_ident1,
            "u": node_ident1,
            "v": node_ident1,
            "w": node_ident1,
            "x": node_ident1,
            "y": node_ident1,
            "z": node_ident1,
            "A": node_ident1,
            "B": node_ident1,
            "C": node_ident1,
            "D": node_ident1,
            "E": node_ident1,
            "F": node_ident1,
            "G": node_ident1,
            "H": node_ident1,
            "I": node_ident1,
            "J": node_ident1,
            "K": node_ident1,
            "L": node_ident1,
            "M": node_ident1,
            "N": node_ident1,
            "O": node_ident1,
            "P": node_ident1,
            "Q": node_ident1,
            "R": node_ident1,
            "S": node_ident1,
            "T": node_ident1,
            "U": node_ident1,
            "V": node_ident1,
            "W": node_ident1,
            "X": node_ident1,
            "Y": node_ident1,
            "Z": node_ident1,
            "1": node_decimal1,
            "2": node_decimal1,
            "3": node_decimal1,
            "4": node_decimal1,
            "5": node_decimal1,
            "6": node_decimal1,
            "7": node_decimal1,
            "8": node_decimal1,
            "9": node_decimal1,
            "0": node_decimal3,
            ".": node_dot1,
            ",": node_comma1,
            "\"": node_string1,
            "'": node_char1
        },
        node_7: { "=": node_8 },
        node_9: { "&": node_12, "=": node_8 },
        node_10: { ">": node_13, "=": node_8 },
        node_11: { "<": node_15, "=": node_8 },
        node_13: { ">": node_14, "=": node_8 },
        node_14: { "=": node_8 },
        node_15: { "<": node_16, "=": node_8 },
        node_17: { "|": node_18, "=": node_8 },
        node_19: { "+": node_20, "=": node_8 },
        node_21: { "-": node_22 },
        node_div: { "/": node_comment2, "*": node_comment3 },
        node_ident1: {
            "_": node_ident2,
            "$": node_ident2,
            "a": node_ident2,
            "b": node_ident2,
            "c": node_ident2,
            "d": node_ident2,
            "e": node_ident2,
            "f": node_ident2,
            "g": node_ident2,
            "h": node_ident2,
            "i": node_ident2,
            "j": node_ident2,
            "k": node_ident2,
            "l": node_ident2,
            "m": node_ident2,
            "n": node_ident2,
            "o": node_ident2,
            "p": node_ident2,
            "q": node_ident2,
            "r": node_ident2,
            "s": node_ident2,
            "t": node_ident2,
            "u": node_ident2,
            "v": node_ident2,
            "w": node_ident2,
            "x": node_ident2,
            "y": node_ident2,
            "z": node_ident2,
            "A": node_ident2,
            "B": node_ident2,
            "C": node_ident2,
            "D": node_ident2,
            "E": node_ident2,
            "F": node_ident2,
            "G": node_ident2,
            "H": node_ident2,
            "I": node_ident2,
            "J": node_ident2,
            "K": node_ident2,
            "L": node_ident2,
            "M": node_ident2,
            "N": node_ident2,
            "O": node_ident2,
            "P": node_ident2,
            "Q": node_ident2,
            "R": node_ident2,
            "S": node_ident2,
            "T": node_ident2,
            "U": node_ident2,
            "V": node_ident2,
            "W": node_ident2,
            "X": node_ident2,
            "Y": node_ident2,
            "Z": node_ident2,
            "0": node_ident2,
            "1": node_ident2,
            "2": node_ident2,
            "3": node_ident2,
            "4": node_ident2,
            "5": node_ident2,
            "6": node_ident2,
            "7": node_ident2,
            "8": node_ident2,
            "9": node_ident2
        },
        node_ident2: {
            "_": node_ident2,
            "$": node_ident2,
            "a": node_ident2,
            "b": node_ident2,
            "c": node_ident2,
            "d": node_ident2,
            "e": node_ident2,
            "f": node_ident2,
            "g": node_ident2,
            "h": node_ident2,
            "i": node_ident2,
            "j": node_ident2,
            "k": node_ident2,
            "l": node_ident2,
            "m": node_ident2,
            "n": node_ident2,
            "o": node_ident2,
            "p": node_ident2,
            "q": node_ident2,
            "r": node_ident2,
            "s": node_ident2,
            "t": node_ident2,
            "u": node_ident2,
            "v": node_ident2,
            "w": node_ident2,
            "x": node_ident2,
            "y": node_ident2,
            "z": node_ident2,
            "A": node_ident2,
            "B": node_ident2,
            "C": node_ident2,
            "D": node_ident2,
            "E": node_ident2,
            "F": node_ident2,
            "G": node_ident2,
            "H": node_ident2,
            "I": node_ident2,
            "J": node_ident2,
            "K": node_ident2,
            "L": node_ident2,
            "M": node_ident2,
            "N": node_ident2,
            "O": node_ident2,
            "P": node_ident2,
            "Q": node_ident2,
            "R": node_ident2,
            "S": node_ident2,
            "T": node_ident2,
            "U": node_ident2,
            "V": node_ident2,
            "W": node_ident2,
            "X": node_ident2,
            "Y": node_ident2,
            "Z": node_ident2,
            "0": node_ident2,
            "1": node_ident2,
            "2": node_ident2,
            "3": node_ident2,
            "4": node_ident2,
            "5": node_ident2,
            "6": node_ident2,
            "7": node_ident2,
            "8": node_ident2,
            "9": node_ident2
        },
        node_decimal1: {
            "0": node_decimal2,
            "1": node_decimal2,
            "2": node_decimal2,
            "3": node_decimal2,
            "4": node_decimal2,
            "5": node_decimal2,
            "6": node_decimal2,
            "7": node_decimal2,
            "8": node_decimal2,
            "9": node_decimal2,
            "l": node_long1,
            "L": node_long1,
            "e": node_float5,
            "E": node_float5
        },
        node_decimal2: {
            "0": node_decimal2,
            "1": node_decimal2,
            "2": node_decimal2,
            "3": node_decimal2,
            "4": node_decimal2,
            "5": node_decimal2,
            "6": node_decimal2,
            "7": node_decimal2,
            "8": node_decimal2,
            "9": node_decimal2,
            "l": node_long1,
            "L": node_long1,
            ".": node_float1,
            "f": node_float2,
            "F": node_float2,
            "d": node_float2,
            "D": node_float2,
            "e": node_float5,
            "E": node_float5
        },
        node_decimal3: {
            "l": node_long1,
            "L": node_long1,
            "0": node_octal1,
            "1": node_octal1,
            "2": node_octal1,
            "3": node_octal1,
            "4": node_octal1,
            "5": node_octal1,
            "6": node_octal1,
            "7": node_octal1,
            "x": node_hex1,
            ".": node_float1
        },
        node_octal1: {
            "0": node_octal1,
            "1": node_octal1,
            "2": node_octal1,
            "3": node_octal1,
            "4": node_octal1,
            "5": node_octal1,
            "6": node_octal1,
            "7": node_octal1
        },
        node_hex1: {
            "0": node_hex2,
            "1": node_hex2,
            "2": node_hex2,
            "3": node_hex2,
            "4": node_hex2,
            "5": node_hex2,
            "6": node_hex2,
            "7": node_hex2,
            "8": node_hex2,
            "9": node_hex2,
            "a": node_hex2,
            "b": node_hex2,
            "c": node_hex2,
            "d": node_hex2,
            "e": node_hex2,
            "f": node_hex2,
            "A": node_hex2,
            "B": node_hex2,
            "C": node_hex2,
            "D": node_hex2,
            "E": node_hex2,
            "F": node_hex2
        },
        node_hex2: {
            "0": node_hex2,
            "1": node_hex2,
            "2": node_hex2,
            "3": node_hex2,
            "4": node_hex2,
            "5": node_hex2,
            "6": node_hex2,
            "7": node_hex2,
            "8": node_hex2,
            "9": node_hex2,
            "a": node_hex2,
            "b": node_hex2,
            "c": node_hex2,
            "d": node_hex2,
            "e": node_hex2,
            "f": node_hex2,
            "A": node_hex2,
            "B": node_hex2,
            "C": node_hex2,
            "D": node_hex2,
            "E": node_hex2,
            "F": node_hex2
        },
        node_float1: {
            "0": node_float3,
            "1": node_float3,
            "2": node_float3,
            "3": node_float3,
            "4": node_float3,
            "5": node_float3,
            "6": node_float3,
            "7": node_float3,
            "8": node_float3,
            "9": node_float3
        },
        node_float3: {
            "0": node_float3,
            "1": node_float3,
            "2": node_float3,
            "3": node_float3,
            "4": node_float3,
            "5": node_float3,
            "6": node_float3,
            "7": node_float3,
            "8": node_float3,
            "9": node_float3,
            "f": node_float4,
            "F": node_float4,
            "d": node_float4,
            "D": node_float4
        },
        node_float5: {
            "1": node_float3,
            "2": node_float3,
            "3": node_float3,
            "4": node_float3,
            "5": node_float3,
            "6": node_float3,
            "7": node_float3,
            "8": node_float3,
            "9": node_float3,
            "+": node_float5,
            "-": node_float5
        },
        node_float6: {
            "1": node_float3,
            "2": node_float3,
            "3": node_float3,
            "4": node_float3,
            "5": node_float3,
            "6": node_float3,
            "7": node_float3,
            "8": node_float3,
            "9": node_float3
        },
        node_string1: {
            "a": node_string2,
            "b": node_string2,
            "c": node_string2,
            "d": node_string2,
            "e": node_string2,
            "f": node_string2,
            "g": node_string2,
            "h": node_string2,
            "i": node_string2,
            "j": node_string2,
            "k": node_string2,
            "l": node_string2,
            "m": node_string2,
            "n": node_string2,
            "o": node_string2,
            "p": node_string2,
            "q": node_string2,
            "r": node_string2,
            "s": node_string2,
            "t": node_string2,
            "u": node_string2,
            "v": node_string2,
            "w": node_string2,
            "x": node_string2,
            "y": node_string2,
            "z": node_string2,
            "A": node_string2,
            "B": node_string2,
            "C": node_string2,
            "D": node_string2,
            "E": node_string2,
            "F": node_string2,
            "G": node_string2,
            "H": node_string2,
            "I": node_string2,
            "J": node_string2,
            "K": node_string2,
            "L": node_string2,
            "M": node_string2,
            "N": node_string2,
            "O": node_string2,
            "P": node_string2,
            "Q": node_string2,
            "R": node_string2,
            "S": node_string2,
            "T": node_string2,
            "U": node_string2,
            "V": node_string2,
            "W": node_string2,
            "X": node_string2,
            "Y": node_string2,
            "Z": node_string2,
            "1": node_string2,
            "2": node_string2,
            "3": node_string2,
            "4": node_string2,
            "5": node_string2,
            "6": node_string2,
            "7": node_string2,
            "8": node_string2,
            "9": node_string2,
            "0": node_string2,
            "~": node_string2,
            "`": node_string2,
            "!": node_string2,
            "@": node_string2,
            "#": node_string2,
            "$": node_string2,
            "%": node_string2,
            "^": node_string2,
            "&": node_string2,
            "*": node_string2,
            "(": node_string2,
            ")": node_string2,
            "_": node_string2,
            "+": node_string2,
            "-": node_string2,
            "=": node_string2,
            "{": node_string2,
            "}": node_string2,
            "[": node_string2,
            "]": node_string2,
            "|": node_string2,
            ";": node_string2,
            ":": node_string2,
            "'": node_string2,
            "<": node_string2,
            ",": node_string2,
            ">": node_string2,
            ".": node_string2,
            "?": node_string2,
            "/": node_string2,
            "\\": node_string4odd,
            "\"": node_string3,
            " ": node_string2
        },
        node_string2: {
            "a": node_string2,
            "b": node_string2,
            "c": node_string2,
            "d": node_string2,
            "e": node_string2,
            "f": node_string2,
            "g": node_string2,
            "h": node_string2,
            "i": node_string2,
            "j": node_string2,
            "k": node_string2,
            "l": node_string2,
            "m": node_string2,
            "n": node_string2,
            "o": node_string2,
            "p": node_string2,
            "q": node_string2,
            "r": node_string2,
            "s": node_string2,
            "t": node_string2,
            "u": node_string2,
            "v": node_string2,
            "w": node_string2,
            "x": node_string2,
            "y": node_string2,
            "z": node_string2,
            "A": node_string2,
            "B": node_string2,
            "C": node_string2,
            "D": node_string2,
            "E": node_string2,
            "F": node_string2,
            "G": node_string2,
            "H": node_string2,
            "I": node_string2,
            "J": node_string2,
            "K": node_string2,
            "L": node_string2,
            "M": node_string2,
            "N": node_string2,
            "O": node_string2,
            "P": node_string2,
            "Q": node_string2,
            "R": node_string2,
            "S": node_string2,
            "T": node_string2,
            "U": node_string2,
            "V": node_string2,
            "W": node_string2,
            "X": node_string2,
            "Y": node_string2,
            "Z": node_string2,
            "1": node_string2,
            "2": node_string2,
            "3": node_string2,
            "4": node_string2,
            "5": node_string2,
            "6": node_string2,
            "7": node_string2,
            "8": node_string2,
            "9": node_string2,
            "0": node_string2,
            "~": node_string2,
            "`": node_string2,
            "!": node_string2,
            "@": node_string2,
            "#": node_string2,
            "$": node_string2,
            "%": node_string2,
            "^": node_string2,
            "&": node_string2,
            "*": node_string2,
            "(": node_string2,
            ")": node_string2,
            "_": node_string2,
            "+": node_string2,
            "-": node_string2,
            "=": node_string2,
            "{": node_string2,
            "}": node_string2,
            "[": node_string2,
            "]": node_string2,
            "|": node_string2,
            ";": node_string2,
            ":": node_string2,
            "'": node_string2,
            "<": node_string2,
            ",": node_string2,
            ">": node_string2,
            ".": node_string2,
            "?": node_string2,
            "/": node_string2,
            "\\": node_string4odd,
            "\"": node_string3,
            " ": node_string2
        },
        node_string4odd: {
            "u": node_unicode1,
            "b": node_string2,
            "t": node_string2,
            "n": node_string2,
            "f": node_string2,
            "r": node_string2,
            "\"": node_string2,
            "'": node_string2,
            "\\": node_string2,
            "0": node_zeroToThreeString,
            "1": node_zeroToThreeString,
            "2": node_zeroToThreeString,
            "3": node_zeroToThreeString,
            "4": node_octalEscape2String,
            "5": node_octalEscape2String,
            "6": node_octalEscape2String,
            "7": node_octalEscape2String
        },
        node_char1: {
            "a": node_char2,
            "b": node_char2,
            "c": node_char2,
            "d": node_char2,
            "e": node_char2,
            "f": node_char2,
            "g": node_char2,
            "h": node_char2,
            "i": node_char2,
            "j": node_char2,
            "k": node_char2,
            "l": node_char2,
            "m": node_char2,
            "n": node_char2,
            "o": node_char2,
            "p": node_char2,
            "q": node_char2,
            "r": node_char2,
            "s": node_char2,
            "t": node_char2,
            "u": node_char2,
            "v": node_char2,
            "w": node_char2,
            "x": node_char2,
            "y": node_char2,
            "z": node_char2,
            "A": node_char2,
            "B": node_char2,
            "C": node_char2,
            "D": node_char2,
            "E": node_char2,
            "F": node_char2,
            "G": node_char2,
            "H": node_char2,
            "I": node_char2,
            "J": node_char2,
            "K": node_char2,
            "L": node_char2,
            "M": node_char2,
            "N": node_char2,
            "O": node_char2,
            "P": node_char2,
            "Q": node_char2,
            "R": node_char2,
            "S": node_char2,
            "T": node_char2,
            "U": node_char2,
            "V": node_char2,
            "W": node_char2,
            "X": node_char2,
            "Y": node_char2,
            "Z": node_char2,
            "1": node_char2,
            "2": node_char2,
            "3": node_char2,
            "4": node_char2,
            "5": node_char2,
            "6": node_char2,
            "7": node_char2,
            "8": node_char2,
            "9": node_char2,
            "0": node_char2,
            "~": node_char2,
            "`": node_char2,
            "!": node_char2,
            "@": node_char2,
            "#": node_char2,
            "$": node_char2,
            "%": node_char2,
            "^": node_char2,
            "&": node_char2,
            "*": node_char2,
            "(": node_char2,
            ")": node_char2,
            "_": node_char2,
            "+": node_char2,
            "-": node_char2,
            "=": node_char2,
            "{": node_char2,
            "}": node_char2,
            "[": node_char2,
            "]": node_char2,
            "|": node_char2,
            ";": node_char2,
            ":": node_char2,
            "'": node_char2,
            "<": node_char2,
            ",": node_char2,
            ">": node_char2,
            ".": node_char2,
            "?": node_char2,
            "/": node_char2,
            "\\": node_char4,
            " ": node_char2
        },
        node_char2: { "'": node_char3 },
        node_char4: {
            "u": node_unicode1,
            "b": node_char5,
            "t": node_char5,
            "n": node_char5,
            "f": node_char5,
            "r": node_char5,
            "\"": node_char5,
            "'": node_char5,
            "\\": node_char5,
            "0": node_zeroToThree,
            "1": node_zeroToThree,
            "2": node_zeroToThree,
            "3": node_zeroToThree,
            "4": node_octalEscape2,
            "5": node_octalEscape2,
            "6": node_octalEscape2,
            "7": node_octalEscape2
        },
        node_char5: { "'": node_char3 },
        node_zeroToThree: {
            "0": node_octalEscape2,
            "1": node_octalEscape2,
            "2": node_octalEscape2,
            "3": node_octalEscape2,
            "4": node_octalEscape2,
            "5": node_octalEscape2,
            "6": node_octalEscape2,
            "7": node_octalEscape2,
            "'": node_char3
        },
        node_zeroToThreeString: {
            "a": node_string2,
            "b": node_string2,
            "c": node_string2,
            "d": node_string2,
            "e": node_string2,
            "f": node_string2,
            "g": node_string2,
            "h": node_string2,
            "i": node_string2,
            "j": node_string2,
            "k": node_string2,
            "l": node_string2,
            "m": node_string2,
            "n": node_string2,
            "o": node_string2,
            "p": node_string2,
            "q": node_string2,
            "r": node_string2,
            "s": node_string2,
            "t": node_string2,
            "u": node_string2,
            "v": node_string2,
            "w": node_string2,
            "x": node_string2,
            "y": node_string2,
            "z": node_string2,
            "A": node_string2,
            "B": node_string2,
            "C": node_string2,
            "D": node_string2,
            "E": node_string2,
            "F": node_string2,
            "G": node_string2,
            "H": node_string2,
            "I": node_string2,
            "J": node_string2,
            "K": node_string2,
            "L": node_string2,
            "M": node_string2,
            "N": node_string2,
            "O": node_string2,
            "P": node_string2,
            "Q": node_string2,
            "R": node_string2,
            "S": node_string2,
            "T": node_string2,
            "U": node_string2,
            "V": node_string2,
            "W": node_string2,
            "X": node_string2,
            "Y": node_string2,
            "Z": node_string2,
            "1": node_octalEscape2String, # needs confirmation (0-7 DFA)
            "2": node_octalEscape2String,
            "3": node_octalEscape2String,
            "4": node_octalEscape2String,
            "5": node_octalEscape2String,
            "6": node_octalEscape2String,
            "7": node_octalEscape2String,
            "8": node_string2,
            "9": node_string2,
            "0": node_octalEscape2String,
            "~": node_string2,
            "`": node_string2,
            "!": node_string2,
            "@": node_string2,
            "#": node_string2,
            "$": node_string2,
            "%": node_string2,
            "^": node_string2,
            "&": node_string2,
            "*": node_string2,
            "(": node_string2,
            ")": node_string2,
            "_": node_string2,
            "+": node_string2,
            "-": node_string2,
            "=": node_string2,
            "{": node_string2,
            "}": node_string2,
            "[": node_string2,
            "]": node_string2,
            "|": node_string2,
            ";": node_string2,
            ":": node_string2,
            "'": node_string2,
            "<": node_string2,
            ",": node_string2,
            ">": node_string2,
            ".": node_string2,
            "?": node_string2,
            "/": node_string2,
            "\\": node_string4odd,
            "\"": node_string3,
            " ": node_string2
        },
        node_octalEscape2: {
            "\"": node_string3,
            "0": node_octalEscape3,
            "1": node_octalEscape3,
            "2": node_octalEscape3,
            "3": node_octalEscape3,
            "4": node_octalEscape3,
            "5": node_octalEscape3,
            "6": node_octalEscape3,
            "7": node_octalEscape3,
            "'": node_char3
        },
        node_octalEscape2String: {
            "a": node_string2,
            "b": node_string2,
            "c": node_string2,
            "d": node_string2,
            "e": node_string2,
            "f": node_string2,
            "g": node_string2,
            "h": node_string2,
            "i": node_string2,
            "j": node_string2,
            "k": node_string2,
            "l": node_string2,
            "m": node_string2,
            "n": node_string2,
            "o": node_string2,
            "p": node_string2,
            "q": node_string2,
            "r": node_string2,
            "s": node_string2,
            "t": node_string2,
            "u": node_string2,
            "v": node_string2,
            "w": node_string2,
            "x": node_string2,
            "y": node_string2,
            "z": node_string2,
            "A": node_string2,
            "B": node_string2,
            "C": node_string2,
            "D": node_string2,
            "E": node_string2,
            "F": node_string2,
            "G": node_string2,
            "H": node_string2,
            "I": node_string2,
            "J": node_string2,
            "K": node_string2,
            "L": node_string2,
            "M": node_string2,
            "N": node_string2,
            "O": node_string2,
            "P": node_string2,
            "Q": node_string2,
            "R": node_string2,
            "S": node_string2,
            "T": node_string2,
            "U": node_string2,
            "V": node_string2,
            "W": node_string2,
            "X": node_string2,
            "Y": node_string2,
            "Z": node_string2,
            "1": node_string2,
            "2": node_string2,
            "3": node_string2,
            "4": node_string2,
            "5": node_string2,
            "6": node_string2,
            "7": node_string2,
            "8": node_string2,
            "9": node_string2,
            "0": node_string2,
            "~": node_string2,
            "`": node_string2,
            "!": node_string2,
            "@": node_string2,
            "#": node_string2,
            "$": node_string2,
            "%": node_string2,
            "^": node_string2,
            "&": node_string2,
            "*": node_string2,
            "(": node_string2,
            ")": node_string2,
            "_": node_string2,
            "+": node_string2,
            "-": node_string2,
            "=": node_string2,
            "{": node_string2,
            "}": node_string2,
            "[": node_string2,
            "]": node_string2,
            "|": node_string2,
            ";": node_string2,
            ":": node_string2,
            "'": node_string2,
            "<": node_string2,
            ",": node_string2,
            ">": node_string2,
            ".": node_string2,
            "?": node_string2,
            "/": node_string2,
            "\\": node_string4odd,
            " ": node_string2
        },
        node_octalEscape3: { "'": node_char3 },
        node_comment2: {
            "a": node_comment2,
            "b": node_comment2,
            "c": node_comment2,
            "d": node_comment2,
            "e": node_comment2,
            "f": node_comment2,
            "g": node_comment2,
            "h": node_comment2,
            "i": node_comment2,
            "j": node_comment2,
            "k": node_comment2,
            "l": node_comment2,
            "m": node_comment2,
            "n": node_comment2,
            "o": node_comment2,
            "p": node_comment2,
            "q": node_comment2,
            "r": node_comment2,
            "s": node_comment2,
            "t": node_comment2,
            "u": node_comment2,
            "v": node_comment2,
            "w": node_comment2,
            "x": node_comment2,
            "y": node_comment2,
            "z": node_comment2,
            "A": node_comment2,
            "B": node_comment2,
            "C": node_comment2,
            "D": node_comment2,
            "E": node_comment2,
            "F": node_comment2,
            "G": node_comment2,
            "H": node_comment2,
            "I": node_comment2,
            "J": node_comment2,
            "K": node_comment2,
            "L": node_comment2,
            "M": node_comment2,
            "N": node_comment2,
            "O": node_comment2,
            "P": node_comment2,
            "Q": node_comment2,
            "R": node_comment2,
            "S": node_comment2,
            "T": node_comment2,
            "U": node_comment2,
            "V": node_comment2,
            "W": node_comment2,
            "X": node_comment2,
            "Y": node_comment2,
            "Z": node_comment2,
            "1": node_comment2,
            "2": node_comment2,
            "3": node_comment2,
            "4": node_comment2,
            "5": node_comment2,
            "6": node_comment2,
            "7": node_comment2,
            "8": node_comment2,
            "9": node_comment2,
            "0": node_comment2,
            "~": node_comment2,
            "`": node_comment2,
            "!": node_comment2,
            "@": node_comment2,
            "#": node_comment2,
            "$": node_comment2,
            "%": node_comment2,
            "^": node_comment2,
            "&": node_comment2,
            "*": node_comment2,
            "(": node_comment2,
            ")": node_comment2,
            "_": node_comment2,
            "+": node_comment2,
            "-": node_comment2,
            "=": node_comment2,
            "{": node_comment2,
            "}": node_comment2,
            "[": node_comment2,
            "]": node_comment2,
            "|": node_comment2,
            ";": node_comment2,
            ":": node_comment2,
            "'": node_comment2,
            "<": node_comment2,
            ",": node_comment2,
            ">": node_comment2,
            ".": node_comment2,
            "?": node_comment2,
            "/": node_comment2,
            "\\": node_comment2,
            "\"": node_comment2,
            " ": node_comment2,
            "\t": node_comment2,
            "\f": node_comment2
        },
        node_comment3: {
            "a": node_comment3,
            "b": node_comment3,
            "c": node_comment3,
            "d": node_comment3,
            "e": node_comment3,
            "f": node_comment3,
            "g": node_comment3,
            "h": node_comment3,
            "i": node_comment3,
            "j": node_comment3,
            "k": node_comment3,
            "l": node_comment3,
            "m": node_comment3,
            "n": node_comment3,
            "o": node_comment3,
            "p": node_comment3,
            "q": node_comment3,
            "r": node_comment3,
            "s": node_comment3,
            "t": node_comment3,
            "u": node_comment3,
            "v": node_comment3,
            "w": node_comment3,
            "x": node_comment3,
            "y": node_comment3,
            "z": node_comment3,
            "A": node_comment3,
            "B": node_comment3,
            "C": node_comment3,
            "D": node_comment3,
            "E": node_comment3,
            "F": node_comment3,
            "G": node_comment3,
            "H": node_comment3,
            "I": node_comment3,
            "J": node_comment3,
            "K": node_comment3,
            "L": node_comment3,
            "M": node_comment3,
            "N": node_comment3,
            "O": node_comment3,
            "P": node_comment3,
            "Q": node_comment3,
            "R": node_comment3,
            "S": node_comment3,
            "T": node_comment3,
            "U": node_comment3,
            "V": node_comment3,
            "W": node_comment3,
            "X": node_comment3,
            "Y": node_comment3,
            "Z": node_comment3,
            "1": node_comment3,
            "2": node_comment3,
            "3": node_comment3,
            "4": node_comment3,
            "5": node_comment3,
            "6": node_comment3,
            "7": node_comment3,
            "8": node_comment3,
            "9": node_comment3,
            "0": node_comment3,
            "~": node_comment3,
            "`": node_comment3,
            "!": node_comment3,
            "@": node_comment3,
            "#": node_comment3,
            "$": node_comment3,
            "%": node_comment3,
            "^": node_comment3,
            "&": node_comment3,
            "*": node_comment4,
            "(": node_comment3,
            ")": node_comment3,
            "_": node_comment3,
            "+": node_comment3,
            "-": node_comment3,
            "=": node_comment3,
            "{": node_comment3,
            "}": node_comment3,
            "[": node_comment3,
            "]": node_comment3,
            "|": node_comment3,
            ";": node_comment3,
            ":": node_comment3,
            "'": node_comment3,
            "<": node_comment3,
            ",": node_comment3,
            ">": node_comment3,
            ".": node_comment3,
            "?": node_comment3,
            "/": node_comment3,
            "\\": node_comment3,
            "\"": node_comment3,
            " ": node_comment3,
            "\n": node_comment3,
            "\r": node_comment3,
            "\t": node_comment3,
            "\f": node_comment3
        },
        node_comment4: {
            "a": node_comment3,
            "b": node_comment3,
            "c": node_comment3,
            "d": node_comment3,
            "e": node_comment3,
            "f": node_comment3,
            "g": node_comment3,
            "h": node_comment3,
            "i": node_comment3,
            "j": node_comment3,
            "k": node_comment3,
            "l": node_comment3,
            "m": node_comment3,
            "n": node_comment3,
            "o": node_comment3,
            "p": node_comment3,
            "q": node_comment3,
            "r": node_comment3,
            "s": node_comment3,
            "t": node_comment3,
            "u": node_comment3,
            "v": node_comment3,
            "w": node_comment3,
            "x": node_comment3,
            "y": node_comment3,
            "z": node_comment3,
            "A": node_comment3,
            "B": node_comment3,
            "C": node_comment3,
            "D": node_comment3,
            "E": node_comment3,
            "F": node_comment3,
            "G": node_comment3,
            "H": node_comment3,
            "I": node_comment3,
            "J": node_comment3,
            "K": node_comment3,
            "L": node_comment3,
            "M": node_comment3,
            "N": node_comment3,
            "O": node_comment3,
            "P": node_comment3,
            "Q": node_comment3,
            "R": node_comment3,
            "S": node_comment3,
            "T": node_comment3,
            "U": node_comment3,
            "V": node_comment3,
            "W": node_comment3,
            "X": node_comment3,
            "Y": node_comment3,
            "Z": node_comment3,
            "1": node_comment3,
            "2": node_comment3,
            "3": node_comment3,
            "4": node_comment3,
            "5": node_comment3,
            "6": node_comment3,
            "7": node_comment3,
            "8": node_comment3,
            "9": node_comment3,
            "0": node_comment3,
            "~": node_comment3,
            "`": node_comment3,
            "!": node_comment3,
            "@": node_comment3,
            "#": node_comment3,
            "$": node_comment3,
            "%": node_comment3,
            "^": node_comment3,
            "&": node_comment3,
            "*": node_comment4,
            "(": node_comment3,
            ")": node_comment3,
            "_": node_comment3,
            "+": node_comment3,
            "-": node_comment3,
            "=": node_comment3,
            "{": node_comment3,
            "}": node_comment3,
            "[": node_comment3,
            "]": node_comment3,
            "|": node_comment3,
            ";": node_comment3,
            ":": node_comment3,
            "'": node_comment3,
            "<": node_comment3,
            ",": node_comment3,
            ">": node_comment3,
            ".": node_comment3,
            "?": node_comment3,
            "/": node_comment5,
            "\\": node_comment3,
            "\"": node_comment3,
            " ": node_comment3,
            "\n": node_comment3,
            "\r": node_comment3,
            "\t": node_comment3,
            "\f": node_comment3
        },
        node_unicode1: {
            "0": node_unicode2,
            "1": node_unicode2,
            "2": node_unicode2,
            "3": node_unicode2,
            "4": node_unicode2,
            "5": node_unicode2,
            "6": node_unicode2,
            "7": node_unicode2,
            "8": node_unicode2,
            "9": node_unicode2,
            "a": node_unicode2,
            "b": node_unicode2,
            "c": node_unicode2,
            "d": node_unicode2,
            "e": node_unicode2,
            "f": node_unicode2,
            "A": node_unicode2,
            "B": node_unicode2,
            "C": node_unicode2,
            "D": node_unicode2,
            "E": node_unicode2,
            "F": node_unicode2
        },
        node_unicode2: {
            "0": node_unicode3,
            "1": node_unicode3,
            "2": node_unicode3,
            "3": node_unicode3,
            "4": node_unicode3,
            "5": node_unicode3,
            "6": node_unicode3,
            "7": node_unicode3,
            "8": node_unicode3,
            "9": node_unicode3,
            "a": node_unicode3,
            "b": node_unicode3,
            "c": node_unicode3,
            "d": node_unicode3,
            "e": node_unicode3,
            "f": node_unicode3,
            "A": node_unicode3,
            "B": node_unicode3,
            "C": node_unicode3,
            "D": node_unicode3,
            "E": node_unicode3,
            "F": node_unicode3
        },
        node_unicode3: {
            "0": node_unicode4,
            "1": node_unicode4,
            "2": node_unicode4,
            "3": node_unicode4,
            "4": node_unicode4,
            "5": node_unicode4,
            "6": node_unicode4,
            "7": node_unicode4,
            "8": node_unicode4,
            "9": node_unicode4,
            "a": node_unicode4,
            "b": node_unicode4,
            "c": node_unicode4,
            "d": node_unicode4,
            "e": node_unicode4,
            "f": node_unicode4,
            "A": node_unicode4,
            "B": node_unicode4,
            "C": node_unicode4,
            "D": node_unicode4,
            "E": node_unicode4,
            "F": node_unicode4
        },
        node_unicode4: {
            "0": node_unicode5,
            "1": node_unicode5,
            "2": node_unicode5,
            "3": node_unicode5,
            "4": node_unicode5,
            "5": node_unicode5,
            "6": node_unicode5,
            "7": node_unicode5,
            "8": node_unicode5,
            "9": node_unicode5,
            "a": node_unicode5,
            "b": node_unicode5,
            "c": node_unicode5,
            "d": node_unicode5,
            "e": node_unicode5,
            "f": node_unicode5,
            "A": node_unicode5,
            "B": node_unicode5,
            "C": node_unicode5,
            "D": node_unicode5,
            "E": node_unicode5,
            "F": node_unicode5
        }
    }

    return dfa

def getReservedWords():
    return {
        "if": TokenKind.KEYWORD_IF,
        "for": TokenKind.KEYWORD_FOR,
        "this": TokenKind.KEYWORD_THIS,
        "abstract": TokenKind.KEYWORD_ABSTRACT,
        "default": TokenKind.KEYWORD_DEFAULT,
        "private": TokenKind.KEYWORD_PRIVATE,
        "boolean": TokenKind.KEYWORD_BOOLEAN,
        "do": TokenKind.KEYWORD_DO,
        "implements": TokenKind.KEYWORD_IMPLEMENTS,
        "protected": TokenKind.KEYWORD_PROTECTED,
        "throw": TokenKind.KEYWORD_THROW,
        "throws": TokenKind.KEYWORD_THROWS,
        "break": TokenKind.KEYWORD_BREAK,
        "double": TokenKind.KEYWORD_DOUBLE,
        "import": TokenKind.KEYWORD_IMPORT,
        "public": TokenKind.KEYWORD_PUBLIC,
        "byte": TokenKind.KEYWORD_BYTE,
        "else": TokenKind.KEYWORD_ELSE,
        "instanceof": TokenKind.KEYWORD_INSTANCEOF,
        "return": TokenKind.KEYWORD_RETURN,
        "transient": TokenKind.KEYWORD_TRANSIENT,
        "case": TokenKind.KEYWORD_CASE,
        "extends": TokenKind.KEYWORD_EXTENDS,
        "int": TokenKind.KEYWORD_INT,
        "short": TokenKind.KEYWORD_SHORT,
        "try": TokenKind.KEYWORD_TRY,
        "catch": TokenKind.KEYWORD_CATCH,
        "final": TokenKind.KEYWORD_FINAL,
        "interface": TokenKind.KEYWORD_INTERFACE,
        "static": TokenKind.KEYWORD_STATIC,
        "void": TokenKind.KEYWORD_VOID,
        "char": TokenKind.KEYWORD_CHAR,
        "finally": TokenKind.KEYWORD_FINALLY,
        "long": TokenKind.KEYWORD_LONG,
        "strictfp": TokenKind.KEYWORD_STRICT_FP,
        "volatile": TokenKind.KEYWORD_VOLATILE,
        "class": TokenKind.KEYWORD_CLASS,
        "float": TokenKind.KEYWORD_FLOAT,
        "native": TokenKind.KEYWORD_NATIVE,
        "super": TokenKind.KEYWORD_SUPER,
        "while": TokenKind.KEYWORD_WHILE,
        "const": TokenKind.KEYWORD_CONST,
        "new": TokenKind.KEYWORD_NEW,
        "switch": TokenKind.KEYWORD_SWITCH,
        "continue": TokenKind.KEYWORD_CONTINUE,
        "goto": TokenKind.KEYWORD_GOTO,
        "package": TokenKind.KEYWORD_PACKAGE,
        "synchronized": TokenKind.KEYWORD_SYNCHRONIZED,
        "false": TokenKind.BOOLEAN_LITERAL,
        "true": TokenKind.BOOLEAN_LITERAL,
        "null": TokenKind.NULL_LITERAL
    }